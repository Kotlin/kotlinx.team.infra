import java.nio.file.Files

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-sam-with-receiver:$kotlin_version")
    }
}

plugins {
    id 'maven-publish'
    id 'java-gradle-plugin'
    id 'org.jetbrains.kotlin.jvm'
}
apply plugin: "kotlin-sam-with-receiver"

// Load `local.properties` file, if it exists. You can put your spaceUser and spaceToken values there, that file is ignored by git
def localPropertiesFile = file("$project.rootDir/local.properties")
if (Files.exists(localPropertiesFile.toPath())) {
    localPropertiesFile.withReader { reader ->
        def localProperties = new Properties()
        localProperties.load(reader)
        localProperties.each { prop -> project.ext.set(prop.key, prop.value) }
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

gradlePlugin {
    plugins {
        teamInfraPlugin {
            id = "kotlinx.team.infra"
            implementationClass = "kotlinx.team.infra.InfraPlugin"
        }
    }
}

sourceSets {
    main {
        kotlin.srcDirs = ['main/src']
        java.srcDirs = ['main/src']
        resources.srcDirs = ['main/resources']
    }
    test {
        kotlin.srcDirs = ['test/src']
        java.srcDirs = ['test/src']
        resources.srcDirs = ['test/resources']
    }
}

dependencies {
    api group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version
    api group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk7', version: kotlin_version
    api group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version

//    compile group: 'org.jetbrains.kotlin', name: 'kotlin-util-klib-metadata', version: kotlin_version
//    compile group: 'org.jetbrains.kotlin', name: 'kotlin-util-klib', version: kotlin_version
//    compile group: 'org.jetbrains.kotlin', name: 'kotlin-util-io', version: kotlin_version

    compileOnly group: 'org.jetbrains.kotlin', name: 'kotlin-compiler', version: kotlin_version
    compileOnly group: 'org.jetbrains.kotlin.multiplatform', name: 'org.jetbrains.kotlin.multiplatform.gradle.plugin', version: kotlin_version

    implementation("org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.0.5")
    implementation("org.ow2.asm:asm:6.0")
    implementation("org.ow2.asm:asm-tree:6.0")

    implementation group: 'com.googlecode.java-diff-utils', name: 'diffutils', version: '1.3.0'

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation gradleTestKit()
    testImplementation 'junit:junit:4.12'
}

samWithReceiver {
    annotation("org.gradle.api.HasImplicitReceiver")
}

apply from: 'publish.gradle'

if (project.hasProperty("teamcity")) {
    gradle.taskGraph.beforeTask {
        println("##teamcity[progressMessage 'Gradle: ${it.project.path}:${it.name}']")
    }
}
